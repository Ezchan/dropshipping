<?phpApp::import('Vendor', 'resize_img');class ImagesController extends AppController {    var $name = 'Images';    var $uses = array('Image');    var $helpers = array('Html', 'Form');    function image_grid($pid = NULL) {        $this->checkadminlogin();        $this->layout = 'admin_default';        if (isset($this->data['eventvalue']) && $this->data['action'] == 'Active') {            foreach ($this->data['checkbox'] as $k => $v) {                $this->request->data['Image']['id'] = $k; //For set id                $this->request->data['Image']['status'] = 'Active';                $this->Image->save($this->request->data['Image']);            }            $this->redirect(array('action' => 'image_grid/' . $pid . '/' . SUCACTIVE), null, true);        }        if (isset($this->data['eventvalue']) && $this->data['action'] == 'Inactive') {            foreach ($this->data['checkbox'] as $k => $v) {                $this->request->data['Image']['id'] = $k; //For set id                $this->request->data['Image']['status'] = 'Inactive';                $this->Image->save($this->request->data['Image']);            }            $this->redirect(array('action' => 'image_grid/' . $pid . '/' . SUCINACTIVE));        } else if (isset($this->data['eventvalue']) && $this->data['eventvalue'] == 'delete') {            foreach ($this->data['checkbox'] as $k => $v) {                $delete_img = $this->Image->find('first', array('conditions' => array('id' => $k)));                unlink(UPLOAD_FOLDER . 'product_images/' . $delete_img['Image']['imagename']);                unlink(UPLOAD_FOLDER . 'product_images/100x100/' . $delete_img['Image']['imagename']);                //unlink(UPLOAD_FOLDER . 'product_images/800x600/' . $delete_img['Image']['imagename']);                $this->Image->delete($k);            }            $this->redirect(array('action' => 'image_grid/' . $pid . '/' . SUCDELETE));        }        $this->paginate = array('conditions' => array('product_id' => $pid), 'order' => 'id desc', 'limit' => ADMIN_PIMAGE_LIMIT);        $this->Image->recursive = 1;        $this->set('image_data', $this->paginate('Image'));    }    //Function for add gallery image    function addimage($pid = NULL) {        $this->checkadminlogin();        $this->layout = 'admin_default';        if (isset($this->data['btnaddimage']) && $this->data['btnaddimage'] == 'Submit') {            $error = 0;            if (isset($_FILES['imagename']['name']) && $_FILES['imagename']['name'] == '') {                $error = 1;                $this->set('selectimage', 'selectimage');            }            if (isset($_FILES['imagename']['name']) && $_FILES['imagename']['name'] != '') {                if ($_FILES['imagename']['error'] != 0) {                    $error = 1;                    $this->set('filecorrupt', 'filecorrupt'); //VALIDIMAGETYPE                } else {                    $uploaddir = UPLOAD_FOLDER . 'product_images/';                    $time = time();                    $new_file_name = preg_replace('/[^a-zA-Z0-9.]/', '', basename($_FILES['imagename']['name']));                    $orignal_scanned_name = basename($_FILES['imagename']['name']);                    $remote_file_name = strtolower($time . $new_file_name);                    //for get file extension                    $fileext = pathinfo($remote_file_name, PATHINFO_EXTENSION);                    $allow_valid_file = array('jpg', 'jpeg', 'png');    //allowed valid images                    if (!in_array($fileext, $allow_valid_file)) {                        $error = 1;                        $this->set('entervalidfile', 'entervalidfile'); //VALIDIMAGETYPE                    } else {                        $uploadfile = $uploaddir . $remote_file_name;                        $file_size = filesize($_FILES['imagename']['tmp_name']);                        if ($file_size > IMAGE_SIZE_1) {                            $error = 1;                            $this->set('invalidsize', 'invalidsize'); //INVALIDSIZEIMAGE                        } else {                            if (move_uploaded_file($_FILES['imagename']['tmp_name'], $uploadfile)) {                                chmod($uploadfile, 0777);                                $resizeObj = new resize_image();                                //For create image thumb of 100x100                                $resizedir1 = UPLOAD_FOLDER . 'product_images/100x100/';                                $resizedir1 = $resizedir1 . $remote_file_name;                                $resizeObj->resize($uploadfile, $resizedir1, '100', '100', '100');                                chmod($resizedir1, 0777);//                                //For create image thumb of 800x600//                                $resizedir2 = SITE_ROOT_IMAGE.'uploads/images/800x600/';//                                $resizedir2 = $resizedir2 .$remote_file_name;//                                $resizeObj->resize($uploadfile, $resizedir2, '800', '600','100');//                                chmod($resizedir2,0777);                                $this->request->data['Image']['product_id'] = $pid;                                $this->request->data['Image']['status'] = 'Active';                                $this->request->data['Image']['imagename'] = $remote_file_name;                                $this->request->data['Image']['created_date'] = date('Y-m-d H:i:s', time());                                //$this->pre($this->data);                                if ($this->Image->save($this->request->data['Image'])) {                                    $this->redirect(array('action' => 'image_grid/' . $pid . '/' . SUCADD), null, true);                                }                            }                        }                    }                }            }        }    }}?>